"""add_product_line'

Revision ID: a8bcaacbed52
Revises: 36bbfdb07296
Create Date: 2024-08-30 15:59:46.542809

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "a8bcaacbed52"
down_revision: Union[str, None] = "36bbfdb07296"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "product_line",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("price", sa.DECIMAL(precision=5, scale=2), nullable=False),
        sa.Column(
            "sku",
            sa.UUID(),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("stock_qty", sa.Integer(), server_default="0", nullable=False),
        sa.Column("is_active", sa.Boolean(), server_default="false", nullable=False),
        sa.Column("order", sa.Integer(), nullable=False),
        sa.Column("weight", sa.Float(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column("product_id", sa.Integer(), nullable=False),
        sa.CheckConstraint(
            '"order" >= 1 AND "order" <= 20', name="product_line_order_range"
        ),
        sa.CheckConstraint(
            "price >= 0 AND price <= 999.99", name="product_line_check_price"
        ),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["product.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "order", "product_id", name="uq_product_line_order_product_id"
        ),
        sa.UniqueConstraint("sku", name="uq_product_line_sku"),
    )
    op.drop_constraint("product_pid_key", "product", type_="unique")
    op.create_unique_constraint("uq_product_pid", "product", ["pid"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("uq_product_pid", "product", type_="unique")
    op.create_unique_constraint("product_pid_key", "product", ["pid"])
    op.drop_table("product_line")
    # ### end Alembic commands ###
