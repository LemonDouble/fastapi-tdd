"""add_seasonal_event

Revision ID: 6bb36af74625
Revises: 1e8ed760265a
Create Date: 2024-08-30 17:24:32.123048

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "6bb36af74625"
down_revision: Union[str, None] = "1e8ed760265a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "seasonal_event", sa.Column("start_date", sa.DateTime(), nullable=False)
    )
    op.add_column(
        "seasonal_event", sa.Column("end_date", sa.DateTime(), nullable=False)
    )
    op.add_column(
        "seasonal_event", sa.Column("name", sa.String(length=100), nullable=False)
    )
    op.create_unique_constraint("uq_seasonal_event_name", "seasonal_event", ["name"])
    op.create_check_constraint(
        constraint_name="seasonal_event_name_length_check",
        table_name="seasonal_event",
        condition="LENGTH(name) > 0",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("uq_seasonal_event_name", "seasonal_event", type_="unique")
    op.drop_constraint(
        "seasonal_event_name_length_check", "seasonal_event", type_="check"
    )
    op.drop_column("seasonal_event", "name")
    op.drop_column("seasonal_event", "end_date")
    op.drop_column("seasonal_event", "start_date")
    # ### end Alembic commands ###
